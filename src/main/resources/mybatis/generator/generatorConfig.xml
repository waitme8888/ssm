<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<!--
  tips：
      1、执行mvn mybatis-generator:generate命令，生成代码
      2、生成的文件位置可自行调整
-->

<generatorConfiguration>
	<!-- 配置文件路径 -->
	<properties resource="mybatis/generator/generatorConfig.properties" />

	<context id="MyBatisTables" targetRuntime="MyBatis3" defaultModelType="flat">
	<!--
	    <plugin type="${mapper.plugin}">
            <property name="mappers" value="${mapper.Mapper}" />
        </plugin>
	  -->
		<!-- 生成注释 -->
        <commentGenerator type="tk.mybatis.mapper.generator.MapperCommentGenerator">
            <property name="suppressAllComments" value="true" />
            <property name="suppressDate" value="true" />
        </commentGenerator>
		
		<!--数据库连接信息 -->
		<jdbcConnection driverClass="${jdbc.driver}"
			connectionURL="${jdbc.url}" userId="${jdbc.username}" password="${jdbc.password}">
			<!-- ORACLE元数据操作的时候，需要设置是否查询注释的字段  -->
            <property name="remarksReporting" value="true"/>
		</jdbcConnection>

        <javaTypeResolver>
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

		<!--生成的model 包路径 -->
		<javaModelGenerator targetPackage="${model.package}"
			targetProject="${target.project}">
			<property name="enableSubPackages" value="ture" />
			<property name="trimStrings" value="true" />
		</javaModelGenerator>

		<!--生成xml mapper文件 路径 -->
		<sqlMapGenerator targetPackage="${xml.mapper.package}"
			targetProject="${target.project}">
			<property name="enableSubPackages" value="ture" />
		</sqlMapGenerator>

		<!-- 生成的Dao接口 的包路径 -->
		<javaClientGenerator type="XMLMAPPER"
			targetPackage="${dao.package}" targetProject="${target.project}">
			<property name="enableSubPackages" value="ture" />
		</javaClientGenerator>

		<!--对应数据库表名 -->
		<table tableName="${tableName}">
            <property name="useActualColumnNames" value="false" />
            <generatedKey column="${tablePK}" sqlStatement="SEQUENCE" identity="true" />
        </table>
		
		
	</context>
</generatorConfiguration>